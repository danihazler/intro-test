{"ast":null,"code":"import _classCallCheck from \"/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/src/components/Game/index.js\";\nimport React, { Component } from 'react';\nimport spiral from \"./spiral.svg\";\nimport dashed from \"./dashed.svg\";\nimport circle from \"./circle.svg\";\nimport './Game.css';\nimport './GameQueries.css';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      turns: 0,\n      totalTurns: 0,\n      degree: 0,\n      difference: 1000,\n      last: new Date().getTime(),\n      position: null,\n      challenges: [\"Parson's Green\", \"Brave New York\", \"Sex Toys\", \"Sheer Bravery\"],\n      showChallenge: false\n    };\n\n    _this.play = function (e) {\n      e.preventDefault();\n\n      _this.getRandomNum();\n\n      requestAnimationFrame(_this.renderChallenge);\n    };\n\n    _this.getRandomNum = function () {\n      var randomNum = Math.floor(Math.random() * 20 + 10);\n\n      _this.setState({\n        turns: randomNum,\n        totalTurns: randomNum\n      }, function () {\n        _this.renderChallenge();\n      });\n    };\n\n    _this.renderChallenge = function () {\n      var _this$state = _this.state,\n          challenges = _this$state.challenges,\n          turns = _this$state.turns;\n      var position = _this.state.totalTurns * 90 / 360 % 1;\n      var now = new Date().getTime();\n\n      if (turns === 0) {\n        _this.setState({\n          position: position,\n          totalTurns: 0,\n          showChallenge: true,\n          difference: 1000\n        });\n\n        return; // if(position === 0) {\n        //   return <span className='challenge'>{challenges[0]}</span>\n        // }\n        // if(position === 0.25) {\n        //   return <span className='challenge'>{challenges[1]}</span>\n        // }\n        // if(position === 0.5) {\n        //   return <span className='challenge'>{challenges[2]}</span>\n        // }\n        // if(position === 0.75) {\n        //   return <span className='challenge'>{challenges[3]}</span>\n        // }\n      }\n\n      if (!_this.state.last || now - _this.state.last > _this.state.difference) {\n        _this.setState(function (prevState) {\n          return {\n            last: now,\n            showChallenge: false,\n            turns: prevState.turns - 1,\n            degree: prevState.degree + 90,\n            difference: prevState.turns >= prevState.turns / 5 ? prevState.difference * 0.85 : prevState.difference * 1.25\n          };\n        });\n      }\n\n      requestAnimationFrame(_this.renderChallenge);\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          degree = _this$state2.degree,\n          position = _this$state2.position;\n      var challengeTitle = null;\n      console.log(this.state.position);\n\n      if (this.state.showChallenge) {\n        challengeTitle = React.createElement(\"span\", {\n          className: \"challenge\",\n          style: {\n            transform: \"rotate(-\".concat(degree, \"deg)\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Title\");\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wheel-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pad-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"pad\",\n        style: {\n          transform: \"rotate(\".concat(this.state.degree, \"deg)\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, challengeTitle)), React.createElement(\"div\", {\n        className: \"clipper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"svg-spiral\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: spiral,\n        alt: \"spiral turning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"svg-dashed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: dashed,\n        alt: \"dashed lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"svg-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: circle,\n        alt: \"circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"play-btn\",\n        onClick: this.play,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"inner-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \" Play \")), React.createElement(\"div\", {\n        className: \"mobile-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"mobile_dashed\",\n        src: \"./dashed_mobile.svg\",\n        alt: \"dashed lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"mobile_spiral\",\n        src: \"./spiral.svg\",\n        alt: \"spiral\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/daniele_pastore/Desktop/BraveEnough/brave-enough.COPY/src/components/Game/index.js"],"names":["React","Component","Game","state","turns","totalTurns","degree","difference","last","Date","getTime","position","challenges","showChallenge","play","e","preventDefault","getRandomNum","requestAnimationFrame","renderChallenge","randomNum","Math","floor","random","setState","now","prevState","challengeTitle","console","log","transform","spiral","dashed","circle"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport spiral from './spiral.svg';\nimport dashed from './dashed.svg';\nimport circle from './circle.svg';\n\nimport './Game.css';\nimport './GameQueries.css';\n\n\nclass Game extends Component {\n  state = {\n    turns : 0,\n    totalTurns: 0,\n    degree: 0,\n    difference: 1000,\n    last: new Date().getTime(),\n    position: null,\n    challenges: [\"Parson's Green\", \"Brave New York\", \"Sex Toys\", \"Sheer Bravery\"],\n    showChallenge: false\n  }\n\n  play = (e) => {\n    e.preventDefault();\n    this.getRandomNum();\n\n    requestAnimationFrame(this.renderChallenge);\n  }\n  \n  getRandomNum = () => {\n    let randomNum = Math.floor((Math.random() * 20) + 10);\n\n    this.setState({\n      turns : randomNum,\n      totalTurns: randomNum\n    },\n     () => { this.renderChallenge() }\n    );\n  }\n\n  renderChallenge = () => {\n    const { challenges, turns } = this.state;\n    let position = (this.state.totalTurns * 90) / 360 % 1;\n\n    let now = new Date().getTime();\n\n    if(turns === 0) {\n\n      this.setState({\n        position: position,\n        totalTurns: 0,\n        showChallenge: true,\n        difference: 1000\n      });\n      return;\n      // if(position === 0) {\n      //   return <span className='challenge'>{challenges[0]}</span>\n      // }\n      // if(position === 0.25) {\n      //   return <span className='challenge'>{challenges[1]}</span>\n\n      // }\n      // if(position === 0.5) {\n      //   return <span className='challenge'>{challenges[2]}</span>\n\n      // }\n      // if(position === 0.75) {\n      //   return <span className='challenge'>{challenges[3]}</span>\n      // }\n\n    }\n\n    if(!this.state.last || now - this.state.last > this.state.difference) {\n\n      this.setState((prevState) => ({\n        last: now,\n        showChallenge: false,\n        turns: prevState.turns - 1,\n        degree: prevState.degree + 90,\n        difference: (prevState.turns >= prevState.turns / 5) ? prevState.difference * 0.85 : prevState.difference * 1.25\n      }))\n    }\n    requestAnimationFrame(this.renderChallenge);\n  }\n  \n  render() {\n    const { degree, position } = this.state;\n    let challengeTitle = null;\n    console.log(this.state.position)\n    if(this.state.showChallenge) {\n      challengeTitle = (\n        <span\n          className='challenge'\n          style = {{transform:`rotate(-${degree}deg)`}} > \n          Title\n        </span>\n      )\n    }\n    return (\n      <React.Fragment>\n        <div className=\"wheel-wrapper\">\n          <div className=\"pad-wrapper\">\n            <div \n              id=\"pad\" \n              style = {{transform:`rotate(${this.state.degree}deg)`}} >\n              { challengeTitle }\n            </div>\n          </div>\n\n        <div className=\"clipper\">\n          <div className=\"svg-spiral\">\n              <img src={spiral} alt=\"spiral turning\" />\n          </div>\n        </div>\n\n        <div className=\"svg-dashed\">\n          <img src={dashed} alt=\"dashed lines\" />\n        </div>\n\n        <div className=\"svg-circle\">\n          <img src={circle} alt=\"circle\" /> \n        </div>\n\n        <button \n          id=\"play-btn\"\n          onClick = {this.play}\n        >\n        <span className=\"inner-btn\"> Play </span> \n        </button>\n\n        <div className=\"mobile-wrapper\">\n          <img className=\"mobile_dashed\" src=\"./dashed_mobile.svg\"  alt=\"dashed lines\" />\n          <img className=\"mobile_spiral\" src=\"./spiral.svg\" alt=\"spiral\" />\n        </div>\n      </div>\n\n      {/* <div className='brave-enough'>\n        <h2>Are you<br/>brave enough<br/>to take the<br/>challenge?</h2>\n      </div> */}\n\n    </React.Fragment>\n    )\n  }\n}\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}